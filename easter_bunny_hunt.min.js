config={turn_time:50,match_limit:1e3};Teams=[];Bunnies=[];class Game{static run_all(){var matches=[];Teams.forEach((function(team){Bunnies.forEach((function(bunny){var game=new Game(team,bunny);game.run();matches.push({team_name:game.team_name,bunny_name:game.bunny_name,score:game.score,winner:game.winner})}))}));matches=matches.sort((function(a,b){return b.score-a.score}));console.log("Matches:");matches.forEach((function(match){console.log(match.team_name+" Vs. "+match.bunny_name+": "+match.score+" to "+match.winner)}));console.log("");var score_board={teams:{},bunnies:{}};Teams.forEach((function(team){score_board.teams[team.name]=0}));Bunnies.forEach((function(bunny){score_board.bunnies[bunny.name]=0}));matches.forEach((function(match){console.log(`${match.team_name} Vs. ${match.bunny_name}: ${match.score} to ${match.winner}`);if(match.winner=="bunny"){score_board.bunnies[match.bunny_name]+=match.score}else if(match.winner=="kids"){score_board.teams[match.team_name]+=match.score}}));console.log("Teams:");Object.keys(score_board.teams).map((function(team_name){return{name:team_name,score:score_board.teams[team_name]}})).sort((function(a,b){return b.score-a.score})).forEach((function(team){console.log(team.name+": "+team.score)}));console.log("");console.log("Bunnies:");Object.keys(score_board.bunnies).map((function(bunny_name){return{name:bunny_name,score:score_board.bunnies[bunny_name]}})).sort((function(a,b){return b.score-a.score})).forEach((function(bunny){console.log(bunny.name+": "+bunny.score)}))}static run_one(team_name,bunny_name){var team=Teams.find((function(team){return team.name==team_name}));var bunny=Bunnies.find((function(bunny){return bunny.name==bunny_name}));if(team&&bunny){var game=new Game(team,bunny);game.attach_renderer();game.run();console.log(game.team_name+" Vs. "+game.bunny_name+": "+game.score+" to "+game.winner)}else{if(!team){console.log("No team named "+team_name+"was found")}if(!bunny){console.log("No bunny named "+bunny_name+"was found")}}}static run_to_turn(team_name,bunny_name,turn){var team=Teams.find((function(team){return team.name==team_name}));var bunny=Bunnies.find((function(bunny){return bunny.name==bunny_name}));if(team&&bunny){var game=new Game(team,bunny);game.attach_renderer();config.match_limit=Number(turn)-2;game.run();console.log(game.team_name+" Vs. "+game.bunny_name+": "+game.score+" to "+game.winner)}else{if(!team){console.log("No team named "+team_name+"was found")}if(!bunny){console.log("No bunny named "+bunny_name+"was found")}}}constructor(team,bunny){this.score=0;this.turn=0;this.active=true;this.winner=null;this.bunny=new Bunny(this,bunny);this.eggs=[];this.team_name=team.name;this.bunny_name=bunny.name;this.storage=team.shared_storage;this.place_kids(team)}place_kids(team){this.kids=[new Kid(this,0,0,team.functions[0]),new Kid(this,48,0,team.functions[1]),new Kid(this,48,48,team.functions[2]),new Kid(this,0,48,team.functions[3])]}attach_renderer(){this.renderer=new Renderer(this)}run(){if(this.renderer){var game=this;this.process=setInterval((function(){game.take_turn()}),config.turn_time)}else{while(this.active){this.take_turn()}}}score_points(n){if(this.active){this.score+=n}}take_turn(){this.kids.forEach((function(kid){kid.take_turn()}));this.bunny.take_turn();if(this.renderer){this.renderer.render();if(!this.active){clearInterval(this.process)}}if(this.turn>config.match_limit){this.winner="bunny";this.end()}this.turn+=1}end(){this.active=false}}class BunnyApi{constructor(game,bunny,entry){this.game=game;this.source_bunny=bunny;this.storage_object=entry.storage}storage(){return this.storage_object}hop(x,y){this.source_bunny.hop_x=x;this.source_bunny.hop_y=y}turn(){return this.game.turn}eggs(){return this.game.eggs.map((function(egg){return{x:egg.x,y:egg.y}}))}bunny(){return{x:this.source_bunny.x,y:this.source_bunny.y,eggs_remaining:this.source_bunny.eggs_remaining}}kids(){var api=this;return this.game.kids.filter((function(kid){return BunnyApi.near_to(api.source_bunny,kid)})).map((function(kid){return{x:kid.x,y:kid.y}}))}static near_to(a,b){return b.x<=a.x+5&&b.x>=a.x-5&&b.y<=a.y+5&&b.y>=a.y-5}}class Bunny{constructor(game,entry){this.game=game;this.func=entry.function;this.x=24;this.y=24;this.eggs_remaining=100;this.hop_x=0;this.hop_y=0;this.api=new BunnyApi(game,this,entry)}take_turn(){this.func(this.api);if(this.hop_x!=0||this.hop_y!=0){if(this.hop_x>2){this.hop_x=2}if(this.hop_x<-2){this.hop_x=-2}if(this.hop_y>2){this.hop_y=2}if(this.hop_y<-2){this.hop_y=-2}this.drop_egg();this.hop(this.hop_x,this.hop_y)}else{}if(this.eggs_remaining<=0){this.game.winner="bunny";this.game.end()}}hop(x,y){this.x=this.x+x;this.y=this.y+y;if(this.x<0){this.x=0}if(this.y<0){this.y=0}if(this.x>48){this.x=48}if(this.y>48){this.y=48}}drop_egg(){this.game.eggs.push({x:this.x,y:this.y,dropped_turn:this.game.turn});this.eggs_remaining-=1}}class KidApi{constructor(game,kid){this.game=game;this.source_kid=kid;this.storage={}}my_storage(){return this.storage}shared_storage(){return this.game.storage}north(){this.source_kid.direction="n"}east(){this.source_kid.direction="e"}south(){this.source_kid.direction="s"}west(){this.source_kid.direction="w"}turn(){return this.game.turn}eggs(){var api=this;return this.game.eggs.filter((function(egg){return KidApi.near_to(api.source_kid,egg)})).map((function(egg){return{x:egg.x,y:egg.y,age:api.game.turn-egg.dropped_turn}}))}bunny(){var bunny=this.game.bunny;if(KidApi.near_to(this.source_kid,bunny)){return{x:bunny.x,y:bunny.y,eggs_remaining:bunny.eggs_remaining}}else{return null}}kids(){var api=this;return this.game.kids.map((function(kid){return{x:kid.x,y:kid.y,me:kid==api.source_kid}}))}kid(){return{x:this.source_kid.x,y:this.source_kid.y,me:true}}static near_to(a,b){return b.x<=a.x+5&&b.x>=a.x-5&&b.y<=a.y+5&&b.y<=a.y+5}}class Kid{constructor(game,x,y,func){this.game=game;this.func=func;this.direction=null;this.x=x;this.y=y;this.api=new KidApi(game,this)}take_turn(){this.func(this.api);this.move();this.check_collisions();this.direction=null}check_collisions(){var kid=this;var eggs=this.on_egg();if(eggs){this.game.score_points(eggs.length);eggs.forEach((function(egg){var index=kid.game.eggs.indexOf(egg);kid.game.eggs.splice(index,1)}))}if(this.on_bunny()){this.game.winner="kids";this.game.end()}}move(){switch(this.direction){case"n":this.y-=1;break;case"e":this.x+=1;break;case"s":this.y+=1;break;case"w":this.x-=1}if(this.x<0){this.x=0}if(this.y<0){this.y=0}if(this.x>48){this.x=48}if(this.y>48){this.y=48}}on_egg(){var kid=this;return this.game.eggs.filter((function(egg){return egg.x==kid.x&&egg.y==kid.y}))}on_bunny(){return this.game.bunny.x==this.x&&this.game.bunny.y==this.y}}String.prototype.replaceAt=function(index,replacement){return this.substr(0,index)+replacement+this.substr(index+replacement.length)};class Renderer{template_grid(){var str="+-------------------------------------------------+\n";Array.from(Array(49)).forEach((function(){str=str.concat("+                                                 +\n")}));str=str.concat("+-------------------------------------------------+\n");return str}constructor(game){this.game=game}render(){var renderer=this;this.grid=this.template_grid();this.draw_object(this.game.bunny,"B");this.game.kids.forEach((function(kid,index){renderer.draw_object(kid,index+1)}));this.game.eggs.forEach((function(egg){renderer.draw_object(egg,"o")}));console.log(this.grid);console.log(`team:  ${this.game.team_name}`);console.log(`bunny: ${this.game.bunny_name}`);console.log(`turn:  ${this.game.turn}`);console.log(`score: ${this.game.score}`)}draw_object(object,char){if(object.x>=0&&object.y>=0&&object.x<49&&object.y<49){this.draw_at(object.x,object.y,char.toString())}}draw_at(x,y,char){var idx=(y+1)*52;idx+=x+1;return this.grid=this.grid.replaceAt(idx,char)}}module.exports=Renderer;Teams.push({name:"get_egg",shared_storage:{sequence:"aaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbb",take_step:function(api){var char=api.shared_storage().sequence[api.turn()];if(char){api[api.my_storage()["key"][char]]()}}},functions:[function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"east",b:"south"}}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"south",b:"west"}}if(api.turn()==49){api.north()}if(api.turn()>=51){api.south()}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"west",b:"north"}}if(api.turn()==49){api.west()}if(api.turn()>=51){api.north()}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"north",b:"east"}}if(api.turn()>=49){api.east()}api.shared_storage().take_step(api)}]});Teams.push({name:"just_catch",shared_storage:{sequence:"aaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbb",take_step:function(api){var char=api.shared_storage().sequence[api.turn()];if(char){api[api.my_storage()["key"][char]]()}}},functions:[function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"east",b:"south"}}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"south",b:"west"}}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"west",b:"north"}}api.shared_storage().take_step(api)},function(api){if(!api.my_storage()["key"]){api.my_storage()["key"]={a:"north",b:"east"}}api.shared_storage().take_step(api)}]});Bunnies.push({name:"basic",storage:{},function:function(api){var above=0;var below=0;var left=0;var right=0;var bunny=api.bunny();api.kids().forEach((function(kid){if(kid.x<bunny.x){left+=1}else if(kid.x>bunny.x){right+=1}if(kid.y<bunny.y){above+=1}else if(kid.y>bunny.y){below+=1}}));api.hop(left-right,above-below)}});module.exports = Game;
